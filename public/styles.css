/* Dark-themed, interactive, and visually engaging CSS for Video Compression Demo */

:root {
  --bg-color: #0d0f13;
  --panel-bg: #1a1c20;
  --accent: #e0e0e0;
  --text: #e1e1e6;
  --text-secondary: #a0a3a8;
  --border: #2c2f36;
  --hover: rgba(97, 97, 97, 0.1);
  --shadow: rgba(0, 0, 0, 0.8);
}

* {
  box-sizing: border-box;
  transition: all 0.3s ease;
  font-size: 16px;
}

body {
  margin: 0;
  padding: 0;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  background-color: var(--bg-color);
  color: var(--text);
}

.container {
  max-width: 70%;
  margin: 40px auto;
  padding: 24px;
  background: var(--panel-bg);
  border-radius: 12px;
  box-shadow: 0 4px 20px var(--shadow);
}

h1 {
  text-align: center;
  font-size: 2.2rem;
  margin-bottom: 24px;
  color: var(--accent);
}

#uploader {
  display: block;
  margin: 0 auto 24px;
  width: 100%;
  padding: 12px;
  background: var(--bg-color);
  border: 2px dashed var(--border);
  border-radius: 8px;
  color: var(--text-secondary);
  text-align: center;
  cursor: pointer;
}
#uploader:hover {
  border-color: var(--accent);
  background: var(--hover);
}

.video-container {
  display: flex;
  flex-direction: column;
  gap: 20px;
  margin-bottom: 24px;
}
.video-container video {
  height: 720px;
  max-width: 720px;
  max-height: 360px;
  margin: auto;
  border-radius: 8px;
  box-shadow: 0 2px 12px var(--shadow);
  display: block;
  /* Autoplay: add the attribute in HTML or via JS: video.autoplay = true */
}

.formats, .controls {
  display: flex;
  flex-wrap: wrap;
  gap: 12px;
  margin-bottom: 24px;
  padding: 18px;
  background: var(--panel-bg);
  border-radius: 8px;
}

.formats strong {
  width: 100%;
  color: var(--text-secondary);
  margin-bottom: 8px;
  font-size: 1rem;
}

.formats label, .controls label {
  flex: 1 1 140px;
  display: flex;
  align-items: center;
  gap: 8px;
  cursor: pointer;
  color: var(--text);
  font-size: 1rem;
}

.formats input[type="checkbox"] {
  appearance: none;
  width: 20px;
  height: 20px;
  background: var(--bg-color);
  border: 2px solid var(--border);
  border-radius: 4px;
  position: relative;
  cursor: pointer;
}
.formats input[type="checkbox"]:checked {
  background: var(--accent);
  border-color: var(--accent);
}
.formats input[type="checkbox"]:checked::after {
  content: '\2713';
  position: absolute;
  top: 1px;
  left: 4px;
  color: #0d0f13;
  font-size: 14px;
}

.controls input[type="number"] {
  background: var(--bg-color);
  color: var(--text);
  border: 1px solid var(--border);
  border-radius: 4px;
  padding: 6px 8px;
  font-size: 1rem;
  width: auto;
}
.controls input[type="number"]:focus {
  outline: 2px solid var(--accent);
}

#convertBtn {
  display: block;
  width: 100%;
  padding: 14px 0;
  background: var(--accent);
  border: none;
  border-radius: 8px;
  font-size: 1.2rem;
  font-weight: 600;
  color: var(--bg-color);
  cursor: pointer;
  box-shadow: 0 4px 14px var(--shadow);
}
#convertBtn:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 18px var(--shadow);
  background: #999999;
}
#convertBtn:active {
  transform: translateY(0);
  box-shadow: 0 3px 10px var(--shadow);
}

.output {
  position: relative;
  margin-top: 24px;
  padding: 18px;
  background: var(--panel-bg);
  border-radius: 8px;
  min-height: 120px;
  color: var(--text-secondary);
  display: flex;
}

/* .output-item {
  padding: 20px;
  margin: auto;
} */

.output.loading::before {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  width: 40px;
  height: 40px;
  margin: -20px 0 0 -20px;
  border: 4px solid var(--border);
  border-top-color: var(--accent);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* Responsive tweaks */
@media (max-width: 600px) {
  .controls label, .formats label {
    flex: 1 1 100%;
  }
  .video-container video {
    max-width: 50%;
  }
}

#infoBtn {
  margin-top: 20px;
  padding: 12px 20px;
  background: var(--panel-bg);
  color: var(--accent);
  border: 2px solid var(--accent);
  border-radius: 8px;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 500;
  display: block;
  width: 100%;
}
#infoBtn:hover {
  background: var(--hover);
}

/* ====== СТИЛИ ДЛЯ КНОПКИ-INFO ====== */
.info-button {
  width: 100%;
  padding: 12px;
  margin-bottom: 24px;
  background: var(--panel-bg);
  color: var(--accent);
  border: 2px solid var(--accent);
  border-radius: 8px;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
}
.info-button:hover {
  background: var(--hover);
}

/* ====== СТИЛИ ДЛЯ МОДАЛЬНОГО ОКНА ====== */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(13, 15, 19, 0.9);
  display: none; /* По умолчанию скрыт */
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.modal-content {
  background: var(--panel-bg);
  color: var(--text);
  max-width: 600px;
  width: 90%;
  padding: 24px;
  border-radius: 12px;
  position: relative;
  box-shadow: 0 4px 20px var(--shadow);
}

.modal-close {
  position: absolute;
  top: 16px;
  right: 16px;
  font-size: 1.5rem;
  color: var(--text-secondary);
  cursor: pointer;
}
.modal-close:hover {
  color: var(--accent);
}

.modal-content h2 {
  margin-top: 0;
  color: var(--accent);
}

.modal-body {
  margin-top: 16px;
  line-height: 1.5;
  font-size: 1rem;
  color: var(--text-secondary);
}

.modal-body ul {
  padding-left: 20px;
}

.modal-body li {
  margin-bottom: 12px;
}

.file-size-info {
  font-size: 0.9rem;
  margin: 4px 0 16px 0;
  color: var(--text-secondary);
}

    .output-item {
      padding: 20px;
      margin: auto;
      background: var(--bg-color);
      border-radius: 8px;
      box-shadow: 0 2px 10px var(--shadow);
    }
    .output-item h3 {
      margin-top: 0;
      color: var(--accent);
    }
    .output-item img,
    .output-item video {
      display: block;
      margin: 12px 0;
      max-width: 100%;
      border-radius: 4px;
      box-shadow: 0 2px 8px var(--shadow);
    }
    .output-item p {
      margin: 8px 0 0 0;
      color: var(--text);
    }
    .output-item a {
      color: var(--accent);
      text-decoration: none;
      font-weight: 500;
    }
    .output-item a:hover {
      text-decoration: underline;
    }